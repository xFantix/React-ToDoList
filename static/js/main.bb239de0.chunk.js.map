{"version":3,"sources":["Components/ComponentForm.js","Components/Task.js","Components/TaskList.js","App.js","index.js"],"names":["ComponentForm","today","Date","toISOString","slice","state","text","date","checked","active","handeChangeForm","e","type","target","value","name","check","setState","handleClick","preventDefault","props","add","className","onSubmit","this","htmlFor","method","id","onChange","min","Component","Task","task","style","color","onClick","delete","change","TaskList","done","tasks","filter","activeTasks","map","key","doneTasks","length","App","counter","deleteTask","index","findIndex","splice","console","log","changeTaskStatus","forEach","addTask","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb239de0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../Style/ComponentForm.css'\r\n\r\nclass ComponentForm extends Component {\r\n\r\n\r\n    today = new Date().toISOString().slice(0, 10);\r\n\r\n    state = {\r\n        text: \"\",\r\n        date: \"\",\r\n        checked: false,\r\n        active: true,\r\n\r\n    }\r\n\r\n\r\n    handeChangeForm = (e) => {\r\n        const type = e.target.type;\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        const check = e.target.checked;\r\n\r\n        if (type === \"text\" || type === \"date\") {\r\n            this.setState({\r\n                [name]: value,\r\n            })\r\n        }\r\n        else if (type === \"checkbox\") {\r\n            this.setState({\r\n                checked: check,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleClick = (e) => {\r\n\r\n        e.preventDefault();\r\n        const { text, date, checked } = this.state;\r\n\r\n        const add = this.props.add(text, date, checked);\r\n\r\n        if (add) {\r\n            this.setState({\r\n                text: \"\",\r\n                date: \"\",\r\n                checked: false,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n        return (\r\n            <form className=\"ComponentForm\" onSubmit={this.handleClick}>\r\n\r\n                <h2 className=\"headerForm\">Add Your Task</h2>\r\n\r\n\r\n                <label htmlFor=\"name\" className=\"formLabel\" method=\"post\">\r\n                    <p className=\"formLabelTag\">Nazwa</p>\r\n                    <input className=\"formLabel__input\" type=\"text\" name=\"text\" id=\"name\" value={this.state.text} onChange={this.handeChangeForm} />\r\n                </label>\r\n\r\n                <label htmlFor=\"Date\" className=\"formLabel\">\r\n                    <p className=\"formLabelTag\">Date</p>\r\n                    <input className=\"formLabel__input\" type=\"date\" name=\"date\" id=\"date\" value={this.state.date} onChange={this.handeChangeForm} min={this.today} />\r\n                </label>\r\n\r\n                <label htmlFor=\"checkbox\" className=\"formLabel\">\r\n                    <p className=\"formLabelTag__checkbox\">Important</p>\r\n                    <input className=\"formLabel__checkbox\" type=\"checkbox\" name=\"checkbox\" id=\"checkbox\" checked={this.state.checked} onChange={this.handeChangeForm} />\r\n                </label>\r\n                <button className=\"buttonForm\">Send Task</button>\r\n\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComponentForm;","import React, { Component } from 'react';\r\nimport '../Style/Task.css'\r\n\r\nconst Task = (props) => {\r\n    const { text, date, checked, id } = props.task;\r\n\r\n\r\n    const style = {\r\n        color: 'red',\r\n    }\r\n\r\n    return (\r\n        <div className=\"task\">\r\n            <strong style={checked ? style : null}>{text}</strong><span>({date}) </span>\r\n            <button className=\"taskButton\" onClick={() => props.delete(id)}>X</button>\r\n            <button className=\"taskButton\" onClick={() => props.change(id)}>Done</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport Task from './Task'\r\nimport '../Style/TaskList.css'\r\n\r\nconst TaskList = (props) => {\r\n\r\n\r\n\r\n    const done = props.tasks.filter(task => task.active === false);\r\n    const active = props.tasks.filter(task => task.active === true);\r\n\r\n    const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />);\r\n\r\n    const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />);\r\n\r\n    return (\r\n        <div className=\"TaskList\">\r\n            <h2 className=\"taskListHeader\" >Active Task ({activeTasks.length})</h2>\r\n            {activeTasks.length > 0 ? activeTasks : <h3 className=\"taskListHeader__noList\">No Assignments</h3>}\r\n            <h2 className=\"taskListHeader\" >Done Task ({doneTasks.length})</h2>\r\n            {doneTasks.length > 0 ? doneTasks : <h3 className=\"taskListHeader__noList\">No Assignments</h3>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n","\nimport './Style/App.css';\nimport ComponentForm from './Components/ComponentForm'\nimport TaskList from './Components/TaskList'\nimport React, { Component } from 'react';\n\nclass App extends Component {\n\n  counter = 0;\n  state = {\n    tasks: [\n    ]\n  }\n\n  deleteTask = (id) => {\n    let tasks = [...this.state.tasks];\n    const index = tasks.findIndex(task => task.id === id);\n\n    tasks.splice(index, 1);\n    console.log(tasks);\n\n    this.setState({\n      tasks\n    })\n\n  }\n\n  changeTaskStatus = (id) => {\n    let tasks = [...this.state.tasks];\n\n    tasks.forEach(task => {\n      if (task.id === id) {\n\n        task.active = false;\n\n        this.setState({\n          tasks\n        })\n      }\n    })\n\n  }\n\n  addTask = (text, date, checked) => {\n\n\n    const task = {\n      id: this.counter,\n      text: text,\n      date: date,\n      checked: checked,\n      active: true,\n\n    }\n\n    this.counter++;\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task],\n    }))\n\n\n    return true;\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n\n        <header className=\"header\">\n          <h1 className=\"header__heading\">React ToDoList</h1>\n        </header>\n        <section className=\"section\">\n          <ComponentForm add={this.addTask} />\n          <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />\n        </section>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Style/index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}